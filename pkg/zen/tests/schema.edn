{ns zen.tests.schema

 test-case {:zen/tags #{zen/schema}
            :type zen/map
            :keys {:title {:type zen/string}
                   :schema {:type zen/map :confirms #{zen/schema}}
                   :cases
                   {:type zen/map
                    :key {:type zen/keyword}
                    :values {:type zen/map
                             :keys {:example {:type zen/any}
                                    :valid  {:type zen/boolean}
                                    :result {:type zen/map :confirms #{zen/schema-errors}}}}}}}

 str {:zen/tags #{test-case}
      :title "Test zen/string"
      :schema {:type zen/string :minLength 2 :maxLength 5 :regex ".*@.*"}
      :cases {:simple {:example "a@b" :valid true}
              :regex  {:example "a*b"
                       :result [{:message "Expected match /.*@.*/, got \"a*b\"", :type "string.regex" :path [], :schema [:regex]}]}
              :minLength {:example "@"
                          :result
                          [{:message "Expected length >= 2, got 1", :type "string.minLength", :path [], :schema [:minLength]}]}
              :maxLength {:example "aaa@aaa"
                          :result
                          [{:message "Expected length <= 5, got 7", :type "string.maxLength" :schema [:maxLength]}]}}}

 }
